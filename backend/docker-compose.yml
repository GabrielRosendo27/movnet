services:
  frontend:
    build:
      context: ../frontend/netmov-front
      dockerfile: Dockerfile
    # environment:
    #   - NODE_ENV=development
    #   - VITE_API_BASE_URL=http://15.228.127.149:5000
    #   - CHOKIDAR_USEPOLLING=true
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - movnet-network
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:rw
    restart: always
    # volumes:
    #   - ../frontend/netmov-front:/app
    #   - /app/node_modules
    # command: npm run dev -- --host
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    # command: >
    #   sh -c "while ! nc -z postdb 5432; do sleep 2; done && dotnet backend.dll"
    # depends_on:
    #   postdb:
    #     condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=database-1.c1o0aasqma33.sa-east-1.rds.amazonaws.com;Port=5432;Database=database-1;Username=movnet;Password=movnet123;

    networks:
      - movnet-network
    # ports:
    #   - "80"
    volumes:
      - ./data-protection:/app/keys
  # postdb:
  #   image: postgres:latest
  #   ports:
  #     - "5432:5432"
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   networks:
  #     - movnet-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - movnet-network

networks:
  movnet-network:
    driver: bridge

volumes:
  pgdata:
  data-protection:
